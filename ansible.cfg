# config file for ansible
# nearly all parameters can be overridden in ansible-playbook or with command line flags
# ansible will read ~/.ansible.cfg or /etc/ansible/ansible.cfg, whichever it finds first

[defaults]

# location of inventory file, eliminates need to specify -i

hostfile = /etc/ansible/inventory/hosts

# location of ansible library, eliminates need to specify --module-path

library = /etc/ansible/plugins/library:/usr/share/ansible

# default module name used in /usr/bin/ansible when -m is not specified

module_name = command

# location for ansible log file.  If set, will store output from ansible
# and ansible-playbook.  If enabling, you may wish to configure
# logrotate.

#log_path = /var/log/ansible.log

# home directory where temp files are stored on remote systems.  Should
# almost always contain $HOME or be a directory writeable by all users

remote_tmp = $HOME/.ansible/tmp

# the default pattern for ansible-playbooks ("hosts:") 

pattern = *

# the default number of forks (parallelism) to be used.  Usually you
# can crank this up.

forks=25

# the timeout used by various connection types.  Usually this corresponds
# to an SSH timeout

timeout=10

# when using --poll or "poll:" in an ansible playbook, and not specifying
# an explicit poll interval, use this interval

poll_interval=15

# when specifying --sudo to /usr/bin/ansible or "sudo:" in a playbook,
# and not specifying "--sudo-user" or "sudo_user" respectively, sudo
# to this user account

sudo_user=root

# the default sudo executable. If a sudo alternative with a sudo-compatible interface
# is used, specify its executable name as the default

sudo_exe=sudo

# the default flags passed to sudo
# sudo_flags=-H

# all commands executed under sudo are passed as arguments to a shell command
# This shell command defaults to /bin/sh
# Changing this helps the situation where a user is only allowed to run
# e.g. /bin/bash with sudo privileges

executable = /bin/bash

# connection to use when -c <connection_type> is not specified

#transport=paramiko
#transport=ssh
transport=smart

# this is needed for paramiko, ssh already have this said in .ssh/config
host_key_checking = False

# remote SSH port to be used when --port or "port:" or an equivalent inventory
# variable is not specified.

remote_port=22

# if set, always run /usr/bin/ansible commands as this user, and assume this value
# if "user:" is not set in a playbook.  If not set, use the current Unix user
# as the default

#remote_user=root

# if set, always use this private key file for authentication, same as if passing
# --private-key-file to ansible or ansible-playbook

#private_key_file=/etc/ansible/secrets/user.pem

# format of string $ansible_managed available within Jinja2 templates, replacing
# {file}, {host} and {uid} with template filename, host and owner respectively.
# The resulting string is passed through strftime(3) so it may contain any
# time-formatting specifiers.
#
# Example: ansible_managed = DONT TOUCH {file}: call {uid} at {host} for changes

ansible_managed = Ansible managed: {file} modified on %Y-%m-%d %H:%M:%S by {uid} on {host}

# if you need to use jinja2 extensions, you can list them here
# use a coma to separate extensions, e.g. :
# jinja2_extensions=jinja2.ext.do,jinja2.ext.i18n
# no extensions are loaded by default

#jinja2_extensions=

# additional plugin paths for non-core plugins

action_plugins     = /usr/share/ansible_plugins/action_plugins:/etc/ansible/plugins/action
callback_plugins   = /usr/share/ansible_plugins/callback_plugins:/etc/ansible/plugins/callback
connection_plugins = /usr/share/ansible_plugins/connection_plugins:/etc/ansible/plugins/connection
lookup_plugins     = /usr/share/ansible_plugins/lookup_plugins:/etc/ansible/plugins/lookup
vars_plugins       = /usr/share/ansible_plugins/vars_plugins:/etc/ansible/plugins/vars
filter_plugins     = /usr/share/ansible_plugins/filter_plugins:/etc/ansible/plugins/filter

# set to 1 if you don't want cowsay support. Alternatively, set ANSIBLE_NOCOWS=1
# in your environment
# nocows           = 1

[paramiko_connection]

# The default setting of yes will record newly discovered and approved (if host key checking is enabled)
# hosts in the user.s hostfile. This setting may be inefficient for large numbers of hosts, and in those
# situations, using the ssh transport is definitely recommended instead. Setting it to False will improve 
# performance and is recommended when host key checking is disabled:

#record_host_keys=True

[ssh_connection]

# if uncommented, sets the ansible ssh arguments to the following.  Leaving off ControlPersist
# will result in poor performance, so use transport=paramiko on older platforms rather than
# removing it

ssh_args=-o PasswordAuthentication=no -o ControlMaster=auto -o ControlPersist=60s -o ControlPath=/tmp/ansible-ssh-%h-%p-%r

# the following makes ansible use scp if the connection type is ssh (default is sftp)

#scp_if_ssh=True

[accelerate]

# This is the port to use for accelerate mode:

accelerate_port = 5099

# This setting controls the timeout for receiving data from a client. If no data is received during this
# time, the socket connection will be closed. A keepalive packet is sent back to the controller every 15
# seconds, so this timeout should not be set lower than 15 (by default, the timeout is 30 seconds)

accelerate_timeout = 30

# This setting controls the timeout for the socket connect call, and should be kept relatively low.
# The connection to the accelerate_port will be attempted 3 times before Ansible will fall back to ssh
# or paramiko (depending on your default connection setting) to try and start the accelerate daemon remotely.
# The default setting is 1.0 seconds

accelerate_connect_timeout = 1.0
